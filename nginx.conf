
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
	client_max_body_size 30m;    #30M为允许的文件大小

    add_header 'Access-Control-Allow-Origin' *;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';

    gzip  on;

    upstream server-api{
        server localhost:8080;
    } 

    server {
        listen       8081;
        server_name  localhost;

        location ~.*\.(gif|jpg|png|jpeg) {
            root /var/www/html;
#            access_log /var/log/nginx/access.log;
            proxy_store on;
            proxy_store_access user:rw group:rw all:rw;
            proxy_temp_path         /home/images/;#代理临时路径
            proxy_redirect          off;


            proxy_set_header        Host 127.0.0.1;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size    10m;
            client_body_buffer_size 1280k;
            proxy_connect_timeout   900;
            proxy_send_timeout      900;
            proxy_read_timeout      900;
            proxy_buffer_size       40k;
            proxy_buffers           40 320k;
            proxy_busy_buffers_size 640k;
            proxy_temp_file_write_size 640k;
            if ( !-e $request_filename)
            {
                proxy_pass  http://127.0.0.1:8081;#代理访问地址
            }
        }
		
		location / {
            root /var/www/html;
 #           access_log /var/log/nginx/access.log;
            proxy_store on;
            proxy_store_access user:rw group:rw all:rw;
            proxy_temp_path         /home/files/;#代理临时路径
            proxy_redirect          off;
            client_max_body_size    30m;
            client_body_buffer_size 1280k;
            proxy_connect_timeout   900;
            proxy_send_timeout      900;
            proxy_read_timeout      900;
            proxy_buffer_size       40k;
            proxy_buffers           40 320k;
            proxy_busy_buffers_size 640k;
            proxy_temp_file_write_size 640k;

            if ($request_filename ~* ^.*?\.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx)$){
                add_header Content-Disposition: 'attachment;';
            }
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen 8088;
        server_name localhost;
        
        location = / {
            root /var/www/html/dist;
            index index.html;
        }

        location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|txt|js|css|md|woff|woff2)$ {
            root /var/www/html/dist;
            index index.html;
        }

        location ~ ^/favicon\.ico$ {
            root /var/www/html/dist;
            index favicon.ico;
        }
 
        location /admin {
            proxy_pass http://server-api/v1/admin;
        }
 
        location / {
           try_files $uri $uri/ /index.html;
        }
    }	
    server {
        listen 80;
        server_name www.zxzytech.cn;
        rewrite ^(.*)$  https://$host$1 permanent;
    }
	
    server {
        listen       443 ssl;
        server_name www.zxzytech.cn;
        root /var/www/tender;

        ssl on;
        ssl_certificate cert/www.zxzytech.cn/1_www.zxzytech.cn_bundle.crt;
        ssl_certificate_key cert/www.zxzytech.cn/2_www.zxzytech.cn.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;

        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers Origin,X-Requested-With,Content-Type,Accept,x-auth-token;
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS;


	location  ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|md|woff|woff2)$ {
            proxy_set_header    X-Forwarded-Proto https;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            root html;
        }

	location / {
	    try_files $uri $uri/ /index.html;
        }
	
	location /common {
	    proxy_pass http://server-api/v1/common;
	}

        location /api {
            proxy_pass http://server-api/v1/api;
        }
		
	location /tender {
            proxy_pass http://server-api/v1/tender;
        }

    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
